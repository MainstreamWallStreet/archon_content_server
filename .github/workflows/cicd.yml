# DEPRECATED: This workflow has been replaced by separate PR test and deployment workflows
# 
# New workflow structure:
# - .github/workflows/pr-test.yml: Runs tests on PR creation/updates
# - .github/workflows/deploy.yml: Deploys to production on merge to main
#
# This file is kept for reference but should not be used.

name: CICD (DEPRECATED)

# DISABLED: This workflow is deprecated - using a dummy trigger that will never fire
on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'This workflow is deprecated'
        required: true
        default: 'Use pr-test.yml and deploy.yml instead'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: |
          pytest

  deploy:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      # Authenticate first
      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT }}

      # OPTIONAL debug â€“ now the token exists
      - name: Show repo claim
        run: |
          echo "OIDC repository claim: $(echo "$ACTIONS_ID_TOKEN" | cut -d'.' -f2 | base64 -d | jq -r .repository)"
        env:
          ACTIONS_ID_TOKEN: ${{ steps.auth.outputs.id_token }}

      # Install gcloud & set project
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Submit Cloud Build
        run: |
          gcloud builds submit \
            --config cloudbuild.yaml \
            --substitutions=_REGION=us-central1,_PIPELINE=zergling-pipeline,_SERVICE=api
